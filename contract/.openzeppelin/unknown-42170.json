{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xf70a86d51Bd88885054ea031344447d75bb4b432",
    "txHash": "0xc53f8c0ce1bbfb9d8cc21620c82725580a28db1e03114ab49811bc2a6f5591e4"
  },
  "proxies": [
    {
      "address": "0x5bcb0650Cc21c71e8bDf9FEBDFD40A2e975E0046",
      "txHash": "0x34001fea27a974087535f3813a3784e5b009fd6f0ca770013a0bcc14fd362b73",
      "kind": "transparent"
    },
    {
      "address": "0xc39A4530b03D158884433d4a28eE7F947aC0D014",
      "txHash": "0x667ee33e20aefc0e1b3f66ccb271d93ba0b8b25412aa2f05058dbbc066165445",
      "kind": "transparent"
    },
    {
      "address": "0x0479158dd9C2208F810F473f190721Dcc1c1c2C7",
      "txHash": "0x32314d4a3fea09cdb7aabac626ecf142c5d98954591a8ab1d6fae2cb18b761c5",
      "kind": "transparent"
    },
    {
      "address": "0x908a42A4D6F94aD8A7c9ec03B01989defd8Ec26c",
      "txHash": "0x2d1397bca74d48b2dfbf335edf786797b2160ecb348c1a23a5382946af99a9ee",
      "kind": "transparent"
    },
    {
      "address": "0x1B8ef8f815FD66F77f46065D752f5bf3352abE41",
      "txHash": "0x5a8e1214c02ea246afe2a9d6cf2d655eba23a5704a67c9456e0ef5d52506585a",
      "kind": "transparent"
    },
    {
      "address": "0xDc6a6C5f6D9656Ace0C9E8cc7185a3C2425B5581",
      "txHash": "0xf1ea3d622308f884fff5d2e2a6e6684e752cf153cc85577597b7dbf5d8d80a38",
      "kind": "transparent"
    },
    {
      "address": "0x722301F33985024c2509b25882dF3B720C654152",
      "txHash": "0xe20c5753146b1b2819ac9803e3d5b254a60d2c295ea08959a8f90f8e54c494c7",
      "kind": "transparent"
    },
    {
      "address": "0x158f9Ab4d4C6F36a7f6D7507223051cAc9d6284A",
      "txHash": "0xe067bb03429e53dd8273eb6b14009fe75878a25bcdabfe434422a0f3f11d2f92",
      "kind": "transparent"
    },
    {
      "address": "0x4A4A62e2102e2A1dA6825c3597f715bd4d8b31d4",
      "txHash": "0x93bf965407d8d492bd5c662148f6cb799be6f836966990694bf77d14b0ca6836",
      "kind": "transparent"
    },
    {
      "address": "0x01bF03eA16b1CA84b4479Bd7CB788ff0557C4710",
      "txHash": "0xae19019f2404eb9e2264d9474188889e2da229c9d889d58fef96d5ae1cfb4989",
      "kind": "transparent"
    },
    {
      "address": "0x3da99ad4A2bd9498EaF97B37932aa9576F40D105",
      "txHash": "0x3797fe7b6d184355c99d61e50db1a72f9b74ad4b47aec0d3750917b543700a4b",
      "kind": "transparent"
    },
    {
      "address": "0x07D33C61BBeC9221E88F947cC6ba4dA59Db7c718",
      "txHash": "0x94e2f402af1b0c7129e62696e5101cd32a1e25a2d5284028275957894b61f0be",
      "kind": "transparent"
    },
    {
      "address": "0xfD65E6b6AcC3Dc55A524E94346cA89f80D705BB4",
      "txHash": "0x9abe8c5ace70ef2bcacea15eaa5f58a5f5ac441511487dfe62b2ef1498a06494",
      "kind": "transparent"
    },
    {
      "address": "0x5781E91358b4ccD535edc942a214631221535F4e",
      "txHash": "0x9b245755d5b93caa6bc9e8e21e1cb797b475c9c0561ac2c3aa3bb5edc8db271b",
      "kind": "transparent"
    },
    {
      "address": "0x97638FF47424B5CBF5e98914576b4f13134eac44",
      "txHash": "0x9001d1ef4dae8f24356da89f24de13e72568e1f1236c9f24167e265ff8ab1b90",
      "kind": "transparent"
    },
    {
      "address": "0x55d099c4FBBcCbEdaEe5a77cB67b2372fEFCF43f",
      "txHash": "0x4b6044ab49df72cfa527f45730fdf8433b8e041ce5fa30f36b380335b5361419",
      "kind": "transparent"
    },
    {
      "address": "0x5f360CA47C5B6C62625437c94817001D2C20f7bB",
      "txHash": "0x07f4dd4752744fc868baf2624d64b975a7dc9e2079a51bfacf75984702212dcd",
      "kind": "transparent"
    },
    {
      "address": "0xa70db6062A36e4c11D4156C6a719b891109F1b7B",
      "txHash": "0x5ee0aefdc0be7dca00ecd097064c4d85348decb16b47e9cb85967208c89a7557",
      "kind": "transparent"
    },
    {
      "address": "0xc8E730eE5EacF0Fe3c7b2736E60904Ae77bAa86d",
      "txHash": "0xdd1683a134333e038aab1e2c042af398ede9c6b08e4510776e73a87e55626d21",
      "kind": "transparent"
    },
    {
      "address": "0x4e68c0f354c03bEbf2a66E1f4fC1a0e54150f0F2",
      "txHash": "0xc35d48950187e4cc2d80f73d37c95e1b634a69a2d554d77ffb580641ac5075bd",
      "kind": "transparent"
    },
    {
      "address": "0xe3DBC4F88EAa632DDF9708732E2832EEaA6688AB",
      "txHash": "0x7e56d6386a73d2af4042410d010a28f77bf4bc38f5dea05e63dc5463b536e2ab",
      "kind": "transparent"
    },
    {
      "address": "0x399511EDEB7ca4A8328E801b1B3D0fe232aBc996",
      "txHash": "0xbc43175990435e33db446dfa580788db07ccfecf687875caa6980466de4c97f2",
      "kind": "transparent"
    },
    {
      "address": "0x9d9F1E12A937D900C8BED1F109DFC22218D0f354",
      "txHash": "0xf3b28c43d6524e6b29e0aa6c3839f2a0a6246c89e584d5818b65e22f2e87ac79",
      "kind": "transparent"
    },
    {
      "address": "0x288d6Dc01798e19f1120f32CCAa49ac6E38A4C4d",
      "txHash": "0xb7bbc0fbd449daf718d4b7164de45c33b3242363634bd3cb101aeaa8deec10b9",
      "kind": "transparent"
    }
  ],
  "impls": {
    "0b7d166ffe875b191510bcda39e90e0ae7bf167cedbc13ad086198724023e5db": {
      "address": "0xd16F0FBc2576c674c58E1Fe00dE90722e60B73d4",
      "txHash": "0x3d7617668dd55c43aa726d4dffcc407b4dd6f7d99bddbfa0ffef0a1b1c2f09be",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "102",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_struct(Counter)8520_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "154",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)5861_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:43"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_struct(Checkpoint)5861_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:287"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)5861_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)5861_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)8520_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)5861_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)8520_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f68dbf28930417a659bcdbdbea1fbd06931abdffec3c2787ecf2061be588ee75": {
      "address": "0x332E6749c6c3e58B7d2a55141e097f03D4F9fd6A",
      "txHash": "0xb373e12b80ddd7894e64dc16dfc93cd72a41ec495085f70dbb51a0d65b8ec88a",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "stakingToken",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IERC20)13069",
            "contract": "LPStakingRewardV1",
            "src": "contracts/LPStakingRewardV1.sol:13"
          },
          {
            "label": "rewardToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)13069",
            "contract": "LPStakingRewardV1",
            "src": "contracts/LPStakingRewardV1.sol:14"
          },
          {
            "label": "balanceOf",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LPStakingRewardV1",
            "src": "contracts/LPStakingRewardV1.sol:16"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "LPStakingRewardV1",
            "src": "contracts/LPStakingRewardV1.sol:17"
          },
          {
            "label": "totalTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "LPStakingRewardV1",
            "src": "contracts/LPStakingRewardV1.sol:18"
          },
          {
            "label": "stakers",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "LPStakingRewardV1",
            "src": "contracts/LPStakingRewardV1.sol:19"
          },
          {
            "label": "lastClaimed",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LPStakingRewardV1",
            "src": "contracts/LPStakingRewardV1.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)13069": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e4c63913f6193a11501d1861eb0ab43e3afceb29a9e85f1823c4e6de8753045e": {
      "address": "0x505791fF23083A2a878D8b1C91811345e5fe1964",
      "txHash": "0x494d8c7deadcd003cfbc55cf5abbec4af32bdd3599b7b51a21162901a23f62c9",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_timestamps",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "TimelockControllerUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:34"
          },
          {
            "label": "_minDelay",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "TimelockControllerUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)48_storage",
            "contract": "TimelockControllerUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:442"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e2b27ab6fde65d732f1764c3e76b0e0f699883fc8bc5f992dbff21cd7040fa15": {
      "address": "0xBC35fBfb05c1401682013B2ACD8093999Da65860",
      "txHash": "0xb1755efa49a3fdd79f4cbeb180dde5d401e35001a4a6640d66fb768f2ba29fda",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "baseToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IBaseToken)15030",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:67"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:69"
          },
          {
            "label": "lp",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:71"
          },
          {
            "label": "accruedFees",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:73"
          },
          {
            "label": "prevhash",
            "offset": 0,
            "slot": "105",
            "type": "t_bytes32",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:75"
          },
          {
            "label": "startBlockTime",
            "offset": 0,
            "slot": "106",
            "type": "t_uint64",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:77"
          },
          {
            "label": "validatorMinimumPercentage",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:79"
          },
          {
            "label": "slashAmountPercentage",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:81"
          },
          {
            "label": "solutionFeePercentage",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:83"
          },
          {
            "label": "retractionFeePercentage",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:85"
          },
          {
            "label": "treasuryRewardPercentage",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:87"
          },
          {
            "label": "lpRewardPercentage",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:89"
          },
          {
            "label": "minClaimSolutionTime",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:91"
          },
          {
            "label": "minRetractionWaitTime",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:93"
          },
          {
            "label": "minContestationVotePeriodTime",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:95"
          },
          {
            "label": "exitValidatorMinUnlockTime",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:97"
          },
          {
            "label": "models",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_bytes32,t_struct(Model)12476_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:100"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_address,t_struct(Validator)12481_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:102"
          },
          {
            "label": "pendingValidatorWithdrawRequestsCount",
            "offset": 0,
            "slot": "119",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:105"
          },
          {
            "label": "pendingValidatorWithdrawRequests",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(PendingValidatorWithdrawRequest)12486_storage))",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:108"
          },
          {
            "label": "validatorWithdrawPendingAmount",
            "offset": 0,
            "slot": "121",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:113"
          },
          {
            "label": "tasks",
            "offset": 0,
            "slot": "122",
            "type": "t_mapping(t_bytes32,t_struct(Task)12499_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:116"
          },
          {
            "label": "commitments",
            "offset": 0,
            "slot": "123",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:120"
          },
          {
            "label": "solutions",
            "offset": 0,
            "slot": "124",
            "type": "t_mapping(t_bytes32,t_struct(Solution)12508_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:123"
          },
          {
            "label": "contestations",
            "offset": 0,
            "slot": "125",
            "type": "t_mapping(t_bytes32,t_struct(Contestation)12515_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:126"
          },
          {
            "label": "contestationVoted",
            "offset": 0,
            "slot": "126",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:128"
          },
          {
            "label": "contestationVotedIndex",
            "offset": 0,
            "slot": "127",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:129"
          },
          {
            "label": "contestationVoteYeas",
            "offset": 0,
            "slot": "128",
            "type": "t_mapping(t_bytes32,t_array(t_address)dyn_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:130"
          },
          {
            "label": "contestationVoteNays",
            "offset": 0,
            "slot": "129",
            "type": "t_mapping(t_bytes32,t_array(t_address)dyn_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:131"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IBaseToken)15030": {
            "label": "contract IBaseToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(PendingValidatorWithdrawRequest)12486_storage))": {
            "label": "mapping(address => mapping(uint256 => struct PendingValidatorWithdrawRequest))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Validator)12481_storage)": {
            "label": "mapping(address => struct Validator)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Contestation)12515_storage)": {
            "label": "mapping(bytes32 => struct Contestation)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Model)12476_storage)": {
            "label": "mapping(bytes32 => struct Model)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Solution)12508_storage)": {
            "label": "mapping(bytes32 => struct Solution)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Task)12499_storage)": {
            "label": "mapping(bytes32 => struct Task)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PendingValidatorWithdrawRequest)12486_storage)": {
            "label": "mapping(uint256 => struct PendingValidatorWithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(Contestation)12515_storage": {
            "label": "struct Contestation",
            "members": [
              {
                "label": "validator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "blocktime",
                "type": "t_uint64",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "finish_start_index",
                "type": "t_uint32",
                "offset": 28,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Model)12476_storage": {
            "label": "struct Model",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "mineable",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "cid",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PendingValidatorWithdrawRequest)12486_storage": {
            "label": "struct PendingValidatorWithdrawRequest",
            "members": [
              {
                "label": "unlockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Solution)12508_storage": {
            "label": "struct Solution",
            "members": [
              {
                "label": "validator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "blocktime",
                "type": "t_uint64",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "claimed",
                "type": "t_bool",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "cid",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Task)12499_storage": {
            "label": "struct Task",
            "members": [
              {
                "label": "model",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "blocktime",
                "type": "t_uint64",
                "offset": 20,
                "slot": "2"
              },
              {
                "label": "version",
                "type": "t_uint8",
                "offset": 28,
                "slot": "2"
              },
              {
                "label": "cid",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Validator)12481_storage": {
            "label": "struct Validator",
            "members": [
              {
                "label": "staked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9a17846da13c69695160291abb73319a6dc53058a3bcd79e6949712fef40f57b": {
      "address": "0xa2b55D418e7e2FA9f73D90F6e0182F0b837D0197",
      "txHash": "0x121ad258e103d9ca722e4c3cd13e436154c5ed93a7725b45457894ee9cac4c46",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "arbius",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IArbius)24972",
            "contract": "DelegatedValidatorDeployerV1",
            "src": "contracts/DelegatedValidatorDeployerV1.sol:9"
          },
          {
            "label": "baseToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IBaseToken)25063",
            "contract": "DelegatedValidatorDeployerV1",
            "src": "contracts/DelegatedValidatorDeployerV1.sol:10"
          },
          {
            "label": "representativesOwners",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_address)",
            "contract": "DelegatedValidatorDeployerV1",
            "src": "contracts/DelegatedValidatorDeployerV1.sol:13"
          },
          {
            "label": "representatives",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage",
            "contract": "DelegatedValidatorDeployerV1",
            "src": "contracts/DelegatedValidatorDeployerV1.sol:14"
          },
          {
            "label": "representativesLength",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "DelegatedValidatorDeployerV1",
            "src": "contracts/DelegatedValidatorDeployerV1.sol:15"
          },
          {
            "label": "version",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DelegatedValidatorDeployerV1",
            "src": "contracts/DelegatedValidatorDeployerV1.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IArbius)24972": {
            "label": "contract IArbius",
            "numberOfBytes": "20"
          },
          "t_contract(IBaseToken)25063": {
            "label": "contract IBaseToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "aad7352f59496a5b1f9de627d84fdeaf1c803f07374c55367786e475aeadd320": {
      "address": "0xD9e4cF3a94FDF89EA8626098908f1515a99f21a6",
      "txHash": "0x5662a992dedb5da234b95ca246b0e3dbada2e5f190fcd1b770c3859a45339865",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "102",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IGovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol:288"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IGovernorTimelockUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/IGovernorTimelockUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IGovernorCompatibilityBravoUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/compatibility/IGovernorCompatibilityBravoUpgradeable.sol:126"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:46"
          },
          {
            "label": "_proposals",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)601_storage)",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:48"
          },
          {
            "label": "_governanceCall",
            "offset": 0,
            "slot": "305",
            "type": "t_struct(Bytes32Deque)11969_storage",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_uint256)46_storage",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:609"
          },
          {
            "label": "_proposalDetails",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint256,t_struct(ProposalDetails)3195_storage)",
            "contract": "GovernorCompatibilityBravoUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)49_storage",
            "contract": "GovernorCompatibilityBravoUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol:297"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "403",
            "type": "t_contract(IVotesUpgradeable)4929",
            "contract": "GovernorVotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "GovernorVotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:44"
          },
          {
            "label": "_quorumNumerator",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:20"
          },
          {
            "label": "_quorumNumeratorHistory",
            "offset": 0,
            "slot": "455",
            "type": "t_struct(History)7111_storage",
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "456",
            "type": "t_array(t_uint256)48_storage",
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:130"
          },
          {
            "label": "_timelock",
            "offset": 0,
            "slot": "504",
            "type": "t_contract(TimelockControllerUpgradeable)3135",
            "contract": "GovernorTimelockControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol:28"
          },
          {
            "label": "_timelockIds",
            "offset": 0,
            "slot": "505",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "GovernorTimelockControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "506",
            "type": "t_array(t_uint256)48_storage",
            "contract": "GovernorTimelockControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol:177"
          },
          {
            "label": "proposalsCreated",
            "offset": 0,
            "slot": "554",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "GovernorV1",
            "src": "contracts/GovernorV1.sol:19"
          },
          {
            "label": "descriptionHashes",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "GovernorV1",
            "src": "contracts/GovernorV1.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Checkpoint)7116_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IVotesUpgradeable)4929": {
            "label": "contract IVotesUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(TimelockControllerUpgradeable)3135": {
            "label": "contract TimelockControllerUpgradeable",
            "numberOfBytes": "20"
          },
          "t_int128": {
            "label": "int128",
            "numberOfBytes": "16"
          },
          "t_mapping(t_address,t_struct(Receipt)3995_storage)": {
            "label": "mapping(address => struct IGovernorCompatibilityBravoUpgradeable.Receipt)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_int128,t_bytes32)": {
            "label": "mapping(int128 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)601_storage)": {
            "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalDetails)3195_storage)": {
            "label": "mapping(uint256 => struct GovernorCompatibilityBravoUpgradeable.ProposalDetails)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BlockNumber)8874_storage": {
            "label": "struct TimersUpgradeable.BlockNumber",
            "members": [
              {
                "label": "_deadline",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Bytes32Deque)11969_storage": {
            "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
            "members": [
              {
                "label": "_begin",
                "type": "t_int128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_end",
                "type": "t_int128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "_data",
                "type": "t_mapping(t_int128,t_bytes32)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Checkpoint)7116_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)7111_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)7116_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)601_storage": {
            "label": "struct GovernorUpgradeable.ProposalCore",
            "members": [
              {
                "label": "voteStart",
                "type": "t_struct(BlockNumber)8874_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "voteEnd",
                "type": "t_struct(BlockNumber)8874_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "canceled",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ProposalDetails)3195_storage": {
            "label": "struct GovernorCompatibilityBravoUpgradeable.ProposalDetails",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "targets",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "signatures",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "calldatas",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "forVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "abstainVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "receipts",
                "type": "t_mapping(t_address,t_struct(Receipt)3995_storage)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Receipt)3995_storage": {
            "label": "struct IGovernorCompatibilityBravoUpgradeable.Receipt",
            "members": [
              {
                "label": "hasVoted",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "support",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint96",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "bf49ac949673c26341fdfe49134fa407fb6c39e12798be51f5f143fa531b752a": {
      "address": "0xDff5341A0e5F6f4ED3A85cD474eaf72865689A26",
      "txHash": "0xd9185155b01e1cbb2a43797e84fb8fd0bc2e3de006280d038055ecd618c66d6f",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "102",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IGovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol:288"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IGovernorTimelockUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/IGovernorTimelockUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IGovernorCompatibilityBravoUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/compatibility/IGovernorCompatibilityBravoUpgradeable.sol:126"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:46"
          },
          {
            "label": "_proposals",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)469_storage)",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:48"
          },
          {
            "label": "_governanceCall",
            "offset": 0,
            "slot": "305",
            "type": "t_struct(Bytes32Deque)10309_storage",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_uint256)46_storage",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:609"
          },
          {
            "label": "_proposalDetails",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint256,t_struct(ProposalDetails)3063_storage)",
            "contract": "GovernorCompatibilityBravoUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)49_storage",
            "contract": "GovernorCompatibilityBravoUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol:297"
          },
          {
            "label": "_votingDelay",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GovernorSettingsUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorSettingsUpgradeable.sol:15"
          },
          {
            "label": "_votingPeriod",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GovernorSettingsUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorSettingsUpgradeable.sol:16"
          },
          {
            "label": "_proposalThreshold",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GovernorSettingsUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorSettingsUpgradeable.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "406",
            "type": "t_array(t_uint256)47_storage",
            "contract": "GovernorSettingsUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorSettingsUpgradeable.sol:129"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "453",
            "type": "t_contract(IVotesUpgradeable)5003",
            "contract": "GovernorVotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "GovernorVotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:44"
          },
          {
            "label": "_quorumNumerator",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:20"
          },
          {
            "label": "_quorumNumeratorHistory",
            "offset": 0,
            "slot": "505",
            "type": "t_struct(History)5525_storage",
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "506",
            "type": "t_array(t_uint256)48_storage",
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:130"
          },
          {
            "label": "_timelock",
            "offset": 0,
            "slot": "554",
            "type": "t_contract(TimelockControllerUpgradeable)3003",
            "contract": "GovernorTimelockControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol:28"
          },
          {
            "label": "_timelockIds",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "GovernorTimelockControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "556",
            "type": "t_array(t_uint256)48_storage",
            "contract": "GovernorTimelockControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol:177"
          },
          {
            "label": "proposalsCreated",
            "offset": 0,
            "slot": "604",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "GovernorV1",
            "src": "contracts/GovernorV1.sol:22"
          },
          {
            "label": "descriptionHashes",
            "offset": 0,
            "slot": "605",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "GovernorV1",
            "src": "contracts/GovernorV1.sol:25"
          },
          {
            "label": "descriptionCids",
            "offset": 0,
            "slot": "606",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "GovernorV1",
            "src": "contracts/GovernorV1.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Checkpoint)5530_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IVotesUpgradeable)5003": {
            "label": "contract IVotesUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(TimelockControllerUpgradeable)3003": {
            "label": "contract TimelockControllerUpgradeable",
            "numberOfBytes": "20"
          },
          "t_int128": {
            "label": "int128",
            "numberOfBytes": "16"
          },
          "t_mapping(t_address,t_struct(Receipt)3863_storage)": {
            "label": "mapping(address => struct IGovernorCompatibilityBravoUpgradeable.Receipt)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_int128,t_bytes32)": {
            "label": "mapping(int128 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)469_storage)": {
            "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalDetails)3063_storage)": {
            "label": "mapping(uint256 => struct GovernorCompatibilityBravoUpgradeable.ProposalDetails)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BlockNumber)7214_storage": {
            "label": "struct TimersUpgradeable.BlockNumber",
            "members": [
              {
                "label": "_deadline",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Bytes32Deque)10309_storage": {
            "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
            "members": [
              {
                "label": "_begin",
                "type": "t_int128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_end",
                "type": "t_int128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "_data",
                "type": "t_mapping(t_int128,t_bytes32)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Checkpoint)5530_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)5525_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)5530_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)469_storage": {
            "label": "struct GovernorUpgradeable.ProposalCore",
            "members": [
              {
                "label": "voteStart",
                "type": "t_struct(BlockNumber)7214_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "voteEnd",
                "type": "t_struct(BlockNumber)7214_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "canceled",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ProposalDetails)3063_storage": {
            "label": "struct GovernorCompatibilityBravoUpgradeable.ProposalDetails",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "targets",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "signatures",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "calldatas",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "forVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "abstainVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "receipts",
                "type": "t_mapping(t_address,t_struct(Receipt)3863_storage)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Receipt)3863_storage": {
            "label": "struct IGovernorCompatibilityBravoUpgradeable.Receipt",
            "members": [
              {
                "label": "hasVoted",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "support",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint96",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "e25c8f891c3e0681e2481d5f1954c3de88985fca1e53a8de989bf630ddc55ab5": {
      "address": "0x710E1604389Dfb75085D4cDD6c2DF6E3d361f1fb",
      "txHash": "0x629f3994034f8a9f0cef3fcaa809bc13a58c798bc8917b32da51b2c3f23ef9cc",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "baseToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IBaseToken)25322",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:67"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:69"
          },
          {
            "label": "lp",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:71"
          },
          {
            "label": "accruedFees",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:73"
          },
          {
            "label": "prevhash",
            "offset": 0,
            "slot": "105",
            "type": "t_bytes32",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:75"
          },
          {
            "label": "startBlockTime",
            "offset": 0,
            "slot": "106",
            "type": "t_uint64",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:77"
          },
          {
            "label": "validatorMinimumPercentage",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:79"
          },
          {
            "label": "slashAmountPercentage",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:81"
          },
          {
            "label": "solutionFeePercentage",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:83"
          },
          {
            "label": "retractionFeePercentage",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:85"
          },
          {
            "label": "treasuryRewardPercentage",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:87"
          },
          {
            "label": "lpRewardPercentage",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:89"
          },
          {
            "label": "minClaimSolutionTime",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:91"
          },
          {
            "label": "minRetractionWaitTime",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:93"
          },
          {
            "label": "minContestationVotePeriodTime",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:95"
          },
          {
            "label": "exitValidatorMinUnlockTime",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:97"
          },
          {
            "label": "models",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_bytes32,t_struct(Model)21312_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:100"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_address,t_struct(Validator)21317_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:102"
          },
          {
            "label": "pendingValidatorWithdrawRequestsCount",
            "offset": 0,
            "slot": "119",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:105"
          },
          {
            "label": "pendingValidatorWithdrawRequests",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(PendingValidatorWithdrawRequest)21322_storage))",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:108"
          },
          {
            "label": "validatorWithdrawPendingAmount",
            "offset": 0,
            "slot": "121",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:113"
          },
          {
            "label": "tasks",
            "offset": 0,
            "slot": "122",
            "type": "t_mapping(t_bytes32,t_struct(Task)21335_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:116"
          },
          {
            "label": "commitments",
            "offset": 0,
            "slot": "123",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:120"
          },
          {
            "label": "solutions",
            "offset": 0,
            "slot": "124",
            "type": "t_mapping(t_bytes32,t_struct(Solution)21346_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:123"
          },
          {
            "label": "contestations",
            "offset": 0,
            "slot": "125",
            "type": "t_mapping(t_bytes32,t_struct(Contestation)21353_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:126"
          },
          {
            "label": "contestationVoted",
            "offset": 0,
            "slot": "126",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:128"
          },
          {
            "label": "contestationVotedIndex",
            "offset": 0,
            "slot": "127",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:129"
          },
          {
            "label": "contestationVoteYeas",
            "offset": 0,
            "slot": "128",
            "type": "t_mapping(t_bytes32,t_array(t_address)dyn_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:130"
          },
          {
            "label": "contestationVoteNays",
            "offset": 0,
            "slot": "129",
            "type": "t_mapping(t_bytes32,t_array(t_address)dyn_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:131"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IBaseToken)25322": {
            "label": "contract IBaseToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(PendingValidatorWithdrawRequest)21322_storage))": {
            "label": "mapping(address => mapping(uint256 => struct PendingValidatorWithdrawRequest))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Validator)21317_storage)": {
            "label": "mapping(address => struct Validator)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Contestation)21353_storage)": {
            "label": "mapping(bytes32 => struct Contestation)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Model)21312_storage)": {
            "label": "mapping(bytes32 => struct Model)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Solution)21346_storage)": {
            "label": "mapping(bytes32 => struct Solution)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Task)21335_storage)": {
            "label": "mapping(bytes32 => struct Task)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PendingValidatorWithdrawRequest)21322_storage)": {
            "label": "mapping(uint256 => struct PendingValidatorWithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(Contestation)21353_storage": {
            "label": "struct Contestation",
            "members": [
              {
                "label": "validator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "blocktime",
                "type": "t_uint64",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "finish_start_index",
                "type": "t_uint32",
                "offset": 28,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Model)21312_storage": {
            "label": "struct Model",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "mineable",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "cid",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PendingValidatorWithdrawRequest)21322_storage": {
            "label": "struct PendingValidatorWithdrawRequest",
            "members": [
              {
                "label": "unlockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Solution)21346_storage": {
            "label": "struct Solution",
            "members": [
              {
                "label": "validator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "blocktime",
                "type": "t_uint64",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "claimed",
                "type": "t_bool",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "claimTaskReward",
                "type": "t_bool",
                "offset": 29,
                "slot": "0"
              },
              {
                "label": "cid",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Task)21335_storage": {
            "label": "struct Task",
            "members": [
              {
                "label": "model",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "blocktime",
                "type": "t_uint64",
                "offset": 20,
                "slot": "2"
              },
              {
                "label": "version",
                "type": "t_uint8",
                "offset": 28,
                "slot": "2"
              },
              {
                "label": "cid",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Validator)21317_storage": {
            "label": "struct Validator",
            "members": [
              {
                "label": "staked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b58c2029b2febed6aeba0605f32de9743d40e207515c97a15a84b1c0cd8026e4": {
      "address": "0xB6dB1409514222a88759d0DF9845Ed323Cd4a167",
      "txHash": "0x62e7127c6774537d07f778fbd5012f96be648f0ef84cd13a44fa8b0285a2dbac",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "arbius",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IArbius)25231",
            "contract": "DelegatedValidatorDeployerV1",
            "src": "contracts/DelegatedValidatorDeployerV1.sol:9"
          },
          {
            "label": "baseToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IBaseToken)25322",
            "contract": "DelegatedValidatorDeployerV1",
            "src": "contracts/DelegatedValidatorDeployerV1.sol:10"
          },
          {
            "label": "representativesOwners",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_address)",
            "contract": "DelegatedValidatorDeployerV1",
            "src": "contracts/DelegatedValidatorDeployerV1.sol:13"
          },
          {
            "label": "representatives",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage",
            "contract": "DelegatedValidatorDeployerV1",
            "src": "contracts/DelegatedValidatorDeployerV1.sol:14"
          },
          {
            "label": "representativesLength",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "DelegatedValidatorDeployerV1",
            "src": "contracts/DelegatedValidatorDeployerV1.sol:15"
          },
          {
            "label": "version",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DelegatedValidatorDeployerV1",
            "src": "contracts/DelegatedValidatorDeployerV1.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IArbius)25231": {
            "label": "contract IArbius",
            "numberOfBytes": "20"
          },
          "t_contract(IBaseToken)25322": {
            "label": "contract IBaseToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c8862a3fa996e65150ed25a539b936b420dd33c4f001abf85e1f8e7deccce89e": {
      "address": "0x094714D12763761b4B999C6AbEB5949D25C86830",
      "txHash": "0xb281a6be6c0f98e9c111236902dcda226d5a5601b896cb7291afa2d365af22f0",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "stakingToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)1287",
            "contract": "ERC20DividendsV1",
            "src": "contracts/ERC20DividendsV1.sol:9"
          },
          {
            "label": "rewardToken",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IERC20)1287",
            "contract": "ERC20DividendsV1",
            "src": "contracts/ERC20DividendsV1.sol:10"
          },
          {
            "label": "totalReleased",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20DividendsV1",
            "src": "contracts/ERC20DividendsV1.sol:12"
          },
          {
            "label": "lastTotalReceived",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20DividendsV1",
            "src": "contracts/ERC20DividendsV1.sol:13"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)1287": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cc0d220bbe059a0039bab839e02da99ee0bfb326c0197b4dadde7eaf30287695": {
      "address": "0x1af1d68c069BE9c9d0728C6c8085A950081fABB6",
      "txHash": "0xc91964fc8637c822ceac4bf6f38568fde54f4b068b8210d44a958214e5574216",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "102",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_struct(Counter)8726_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "154",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)6067_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:43"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_struct(Checkpoint)6067_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:287"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)6067_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)6067_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)8726_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)6067_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)8726_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f8bf61ac5c5ef70026c1d348a732de7d7606f01399ff694eb3a4cfbdf178d2dc": {
      "address": "0xA2979761CbC325b43D01C51e3Dc252110Ef2426D",
      "txHash": "0xc593c7e4e2331de840fb5a223be5bca30916f0e7d24dae62c8a1388fb27aae5e",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_timestamps",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "TimelockControllerUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:34"
          },
          {
            "label": "_minDelay",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "TimelockControllerUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)48_storage",
            "contract": "TimelockControllerUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:442"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "31b481a1ab121c437a2320c25ebe994b0a1975e6b74ff77b5ecbed97d93f11ff": {
      "address": "0x3341417109E1eD8C8762445c5e301fe359666ED6",
      "txHash": "0xf91ec0e838365b205e591244807d547447220ffa590fbb6c03c6628d63b9ac7a",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "baseToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IBaseToken)25932",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:66"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:68"
          },
          {
            "label": "lp",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:70"
          },
          {
            "label": "accruedFees",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:72"
          },
          {
            "label": "prevhash",
            "offset": 0,
            "slot": "105",
            "type": "t_bytes32",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:74"
          },
          {
            "label": "startBlockTime",
            "offset": 0,
            "slot": "106",
            "type": "t_uint64",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:76"
          },
          {
            "label": "version",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:78"
          },
          {
            "label": "validatorMinimumPercentage",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:80"
          },
          {
            "label": "slashAmountPercentage",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:82"
          },
          {
            "label": "solutionFeePercentage",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:84"
          },
          {
            "label": "retractionFeePercentage",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:86"
          },
          {
            "label": "treasuryRewardPercentage",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:88"
          },
          {
            "label": "lpRewardPercentage",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:90"
          },
          {
            "label": "minClaimSolutionTime",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:92"
          },
          {
            "label": "minRetractionWaitTime",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:94"
          },
          {
            "label": "minContestationVotePeriodTime",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:96"
          },
          {
            "label": "exitValidatorMinUnlockTime",
            "offset": 0,
            "slot": "117",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:98"
          },
          {
            "label": "models",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_bytes32,t_struct(Model)21907_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:101"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "119",
            "type": "t_mapping(t_address,t_struct(Validator)21912_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:103"
          },
          {
            "label": "pendingValidatorWithdrawRequestsCount",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:106"
          },
          {
            "label": "pendingValidatorWithdrawRequests",
            "offset": 0,
            "slot": "121",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(PendingValidatorWithdrawRequest)21917_storage))",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:109"
          },
          {
            "label": "validatorWithdrawPendingAmount",
            "offset": 0,
            "slot": "122",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:114"
          },
          {
            "label": "tasks",
            "offset": 0,
            "slot": "123",
            "type": "t_mapping(t_bytes32,t_struct(Task)21930_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:117"
          },
          {
            "label": "commitments",
            "offset": 0,
            "slot": "124",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:121"
          },
          {
            "label": "solutions",
            "offset": 0,
            "slot": "125",
            "type": "t_mapping(t_bytes32,t_struct(Solution)21939_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:124"
          },
          {
            "label": "contestations",
            "offset": 0,
            "slot": "126",
            "type": "t_mapping(t_bytes32,t_struct(Contestation)21946_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:127"
          },
          {
            "label": "contestationVoted",
            "offset": 0,
            "slot": "127",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:129"
          },
          {
            "label": "contestationVotedIndex",
            "offset": 0,
            "slot": "128",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:130"
          },
          {
            "label": "contestationVoteYeas",
            "offset": 0,
            "slot": "129",
            "type": "t_mapping(t_bytes32,t_array(t_address)dyn_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:131"
          },
          {
            "label": "contestationVoteNays",
            "offset": 0,
            "slot": "130",
            "type": "t_mapping(t_bytes32,t_array(t_address)dyn_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:132"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IBaseToken)25932": {
            "label": "contract IBaseToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(PendingValidatorWithdrawRequest)21917_storage))": {
            "label": "mapping(address => mapping(uint256 => struct PendingValidatorWithdrawRequest))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Validator)21912_storage)": {
            "label": "mapping(address => struct Validator)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Contestation)21946_storage)": {
            "label": "mapping(bytes32 => struct Contestation)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Model)21907_storage)": {
            "label": "mapping(bytes32 => struct Model)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Solution)21939_storage)": {
            "label": "mapping(bytes32 => struct Solution)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Task)21930_storage)": {
            "label": "mapping(bytes32 => struct Task)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PendingValidatorWithdrawRequest)21917_storage)": {
            "label": "mapping(uint256 => struct PendingValidatorWithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(Contestation)21946_storage": {
            "label": "struct Contestation",
            "members": [
              {
                "label": "validator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "blocktime",
                "type": "t_uint64",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "finish_start_index",
                "type": "t_uint32",
                "offset": 28,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Model)21907_storage": {
            "label": "struct Model",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "cid",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PendingValidatorWithdrawRequest)21917_storage": {
            "label": "struct PendingValidatorWithdrawRequest",
            "members": [
              {
                "label": "unlockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Solution)21939_storage": {
            "label": "struct Solution",
            "members": [
              {
                "label": "validator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "blocktime",
                "type": "t_uint64",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "claimed",
                "type": "t_bool",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "cid",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Task)21930_storage": {
            "label": "struct Task",
            "members": [
              {
                "label": "model",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "blocktime",
                "type": "t_uint64",
                "offset": 20,
                "slot": "2"
              },
              {
                "label": "version",
                "type": "t_uint8",
                "offset": 28,
                "slot": "2"
              },
              {
                "label": "cid",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Validator)21912_storage": {
            "label": "struct Validator",
            "members": [
              {
                "label": "staked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "90112d59d89fa9e14546f7949a6d4035704761bcea8ecb45aeb921fb70ca3ebd": {
      "address": "0xC948412F0d7BBfF4acf2744FE7250968b5244DeC",
      "txHash": "0xc4f9fc1e3a558460c37df0682bc646c8d56979af5cad7dae618ea738e893c144",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "102",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IGovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol:288"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IGovernorTimelockUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/IGovernorTimelockUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IGovernorCompatibilityBravoUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/compatibility/IGovernorCompatibilityBravoUpgradeable.sol:126"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:46"
          },
          {
            "label": "_proposals",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)469_storage)",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:48"
          },
          {
            "label": "_governanceCall",
            "offset": 0,
            "slot": "305",
            "type": "t_struct(Bytes32Deque)10309_storage",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_uint256)46_storage",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:609"
          },
          {
            "label": "_proposalDetails",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint256,t_struct(ProposalDetails)3063_storage)",
            "contract": "GovernorCompatibilityBravoUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)49_storage",
            "contract": "GovernorCompatibilityBravoUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol:297"
          },
          {
            "label": "_votingDelay",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GovernorSettingsUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorSettingsUpgradeable.sol:15"
          },
          {
            "label": "_votingPeriod",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GovernorSettingsUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorSettingsUpgradeable.sol:16"
          },
          {
            "label": "_proposalThreshold",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GovernorSettingsUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorSettingsUpgradeable.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "406",
            "type": "t_array(t_uint256)47_storage",
            "contract": "GovernorSettingsUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorSettingsUpgradeable.sol:129"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "453",
            "type": "t_contract(IVotesUpgradeable)5003",
            "contract": "GovernorVotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "GovernorVotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:44"
          },
          {
            "label": "_quorumNumerator",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:20"
          },
          {
            "label": "_quorumNumeratorHistory",
            "offset": 0,
            "slot": "505",
            "type": "t_struct(History)5525_storage",
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "506",
            "type": "t_array(t_uint256)48_storage",
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:130"
          },
          {
            "label": "_timelock",
            "offset": 0,
            "slot": "554",
            "type": "t_contract(TimelockControllerUpgradeable)3003",
            "contract": "GovernorTimelockControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol:28"
          },
          {
            "label": "_timelockIds",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "GovernorTimelockControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "556",
            "type": "t_array(t_uint256)48_storage",
            "contract": "GovernorTimelockControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol:177"
          },
          {
            "label": "proposalsCreated",
            "offset": 0,
            "slot": "604",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "GovernorV1",
            "src": "contracts/GovernorV1.sol:22"
          },
          {
            "label": "descriptionHashes",
            "offset": 0,
            "slot": "605",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "GovernorV1",
            "src": "contracts/GovernorV1.sol:25"
          },
          {
            "label": "descriptionCids",
            "offset": 0,
            "slot": "606",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "GovernorV1",
            "src": "contracts/GovernorV1.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Checkpoint)5530_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IVotesUpgradeable)5003": {
            "label": "contract IVotesUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(TimelockControllerUpgradeable)3003": {
            "label": "contract TimelockControllerUpgradeable",
            "numberOfBytes": "20"
          },
          "t_int128": {
            "label": "int128",
            "numberOfBytes": "16"
          },
          "t_mapping(t_address,t_struct(Receipt)3863_storage)": {
            "label": "mapping(address => struct IGovernorCompatibilityBravoUpgradeable.Receipt)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_int128,t_bytes32)": {
            "label": "mapping(int128 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)469_storage)": {
            "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalDetails)3063_storage)": {
            "label": "mapping(uint256 => struct GovernorCompatibilityBravoUpgradeable.ProposalDetails)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BlockNumber)7214_storage": {
            "label": "struct TimersUpgradeable.BlockNumber",
            "members": [
              {
                "label": "_deadline",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Bytes32Deque)10309_storage": {
            "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
            "members": [
              {
                "label": "_begin",
                "type": "t_int128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_end",
                "type": "t_int128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "_data",
                "type": "t_mapping(t_int128,t_bytes32)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Checkpoint)5530_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)5525_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)5530_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)469_storage": {
            "label": "struct GovernorUpgradeable.ProposalCore",
            "members": [
              {
                "label": "voteStart",
                "type": "t_struct(BlockNumber)7214_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "voteEnd",
                "type": "t_struct(BlockNumber)7214_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "canceled",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ProposalDetails)3063_storage": {
            "label": "struct GovernorCompatibilityBravoUpgradeable.ProposalDetails",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "targets",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "signatures",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "calldatas",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "forVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "abstainVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "receipts",
                "type": "t_mapping(t_address,t_struct(Receipt)3863_storage)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Receipt)3863_storage": {
            "label": "struct IGovernorCompatibilityBravoUpgradeable.Receipt",
            "members": [
              {
                "label": "hasVoted",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "support",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint96",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "741a08a011f0f5d73daa229ff6b0a4551badfbb686f508ad3dcf4e0cbcc2e670": {
      "address": "0xFfe3d01d0Dea97C1c3dFf8f9E211aF3e12ed256E",
      "txHash": "0xfc41082396a82b08b072ce662604da4ff0a7cb2d934dffcd896a526a0d8e1259",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "102",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_struct(Counter)2669_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "154",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:37"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)1484_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:38"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_struct(Checkpoint)1484_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:302"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "l2Gateway",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "BaseTokenV1",
            "src": "contracts/BaseTokenV1.sol:18"
          },
          {
            "label": "l1Address",
            "offset": 0,
            "slot": "305",
            "type": "t_address",
            "contract": "BaseTokenV1",
            "src": "contracts/BaseTokenV1.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_uint256)48_storage",
            "contract": "BaseTokenV1",
            "src": "contracts/BaseTokenV1.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)1484_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)1484_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2669_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)1484_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2669_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b9877849972b564ce1fa261d4288beb870a545e55f7b42ed4db9e63a7edbf931": {
      "address": "0xadcabea4DFF651F7F87534B617AC77Ab8a0E307c",
      "txHash": "0x8ae43e25695feb1d6b1c937cbb249e1f6abca17c265b7de9fd74fc8cb685f013",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "baseToken",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IBaseToken)30167",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:70"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:72"
          },
          {
            "label": "pauser",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:74"
          },
          {
            "label": "paused",
            "offset": 20,
            "slot": "103",
            "type": "t_bool",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:76"
          },
          {
            "label": "accruedFees",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:78"
          },
          {
            "label": "prevhash",
            "offset": 0,
            "slot": "105",
            "type": "t_bytes32",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:80"
          },
          {
            "label": "startBlockTime",
            "offset": 0,
            "slot": "106",
            "type": "t_uint64",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:82"
          },
          {
            "label": "version",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:84"
          },
          {
            "label": "validatorMinimumPercentage",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:86"
          },
          {
            "label": "slashAmountPercentage",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:88"
          },
          {
            "label": "solutionFeePercentage",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:90"
          },
          {
            "label": "retractionFeePercentage",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:92"
          },
          {
            "label": "treasuryRewardPercentage",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:94"
          },
          {
            "label": "minClaimSolutionTime",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:96"
          },
          {
            "label": "minRetractionWaitTime",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:98"
          },
          {
            "label": "minContestationVotePeriodTime",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:100"
          },
          {
            "label": "maxContestationValidatorStakeSince",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:101"
          },
          {
            "label": "exitValidatorMinUnlockTime",
            "offset": 0,
            "slot": "117",
            "type": "t_uint256",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:103"
          },
          {
            "label": "models",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_bytes32,t_struct(Model)25583_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:106"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "119",
            "type": "t_mapping(t_address,t_struct(Validator)25590_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:108"
          },
          {
            "label": "pendingValidatorWithdrawRequestsCount",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:111"
          },
          {
            "label": "pendingValidatorWithdrawRequests",
            "offset": 0,
            "slot": "121",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(PendingValidatorWithdrawRequest)25595_storage))",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:114"
          },
          {
            "label": "validatorWithdrawPendingAmount",
            "offset": 0,
            "slot": "122",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:119"
          },
          {
            "label": "tasks",
            "offset": 0,
            "slot": "123",
            "type": "t_mapping(t_bytes32,t_struct(Task)25608_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:122"
          },
          {
            "label": "commitments",
            "offset": 0,
            "slot": "124",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:126"
          },
          {
            "label": "solutions",
            "offset": 0,
            "slot": "125",
            "type": "t_mapping(t_bytes32,t_struct(Solution)25617_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:129"
          },
          {
            "label": "contestations",
            "offset": 0,
            "slot": "126",
            "type": "t_mapping(t_bytes32,t_struct(Contestation)25626_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:132"
          },
          {
            "label": "contestationVoted",
            "offset": 0,
            "slot": "127",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:134"
          },
          {
            "label": "contestationVotedIndex",
            "offset": 0,
            "slot": "128",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:135"
          },
          {
            "label": "contestationVoteYeas",
            "offset": 0,
            "slot": "129",
            "type": "t_mapping(t_bytes32,t_array(t_address)dyn_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:136"
          },
          {
            "label": "contestationVoteNays",
            "offset": 0,
            "slot": "130",
            "type": "t_mapping(t_bytes32,t_array(t_address)dyn_storage)",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:137"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "131",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EngineV1",
            "src": "contracts/EngineV1.sol:139"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IBaseToken)30167": {
            "label": "contract IBaseToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(PendingValidatorWithdrawRequest)25595_storage))": {
            "label": "mapping(address => mapping(uint256 => struct PendingValidatorWithdrawRequest))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Validator)25590_storage)": {
            "label": "mapping(address => struct Validator)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Contestation)25626_storage)": {
            "label": "mapping(bytes32 => struct Contestation)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Model)25583_storage)": {
            "label": "mapping(bytes32 => struct Model)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Solution)25617_storage)": {
            "label": "mapping(bytes32 => struct Solution)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Task)25608_storage)": {
            "label": "mapping(bytes32 => struct Task)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PendingValidatorWithdrawRequest)25595_storage)": {
            "label": "mapping(uint256 => struct PendingValidatorWithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(Contestation)25626_storage": {
            "label": "struct Contestation",
            "members": [
              {
                "label": "validator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "blocktime",
                "type": "t_uint64",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "finish_start_index",
                "type": "t_uint32",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "slashAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Model)25583_storage": {
            "label": "struct Model",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "cid",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PendingValidatorWithdrawRequest)25595_storage": {
            "label": "struct PendingValidatorWithdrawRequest",
            "members": [
              {
                "label": "unlockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Solution)25617_storage": {
            "label": "struct Solution",
            "members": [
              {
                "label": "validator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "blocktime",
                "type": "t_uint64",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "claimed",
                "type": "t_bool",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "cid",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Task)25608_storage": {
            "label": "struct Task",
            "members": [
              {
                "label": "model",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "blocktime",
                "type": "t_uint64",
                "offset": 20,
                "slot": "2"
              },
              {
                "label": "version",
                "type": "t_uint8",
                "offset": 28,
                "slot": "2"
              },
              {
                "label": "cid",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Validator)25590_storage": {
            "label": "struct Validator",
            "members": [
              {
                "label": "staked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "since",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3f71d2190a8a07a3711a007b55afbf6530169019164887bc12005797d852f34c": {
      "address": "0x65bc2fdCEE99bB54c8535299Bc401eEbe32f5965",
      "txHash": "0xd6d0f948f53ecdd1219ef5e78f23e67e117aededce1c3f0fdbcf72a9ad718e01",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "102",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_struct(Counter)2517_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "154",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:37"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)1332_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:38"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_struct(Checkpoint)1332_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:302"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "l2Gateway",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "BaseTokenV1",
            "src": "contracts/BaseTokenV1.sol:18"
          },
          {
            "label": "l1Address",
            "offset": 0,
            "slot": "305",
            "type": "t_address",
            "contract": "BaseTokenV1",
            "src": "contracts/BaseTokenV1.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_uint256)48_storage",
            "contract": "BaseTokenV1",
            "src": "contracts/BaseTokenV1.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)1332_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)1332_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2517_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)1332_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2517_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
